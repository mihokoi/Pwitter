###########
# BUILDER #
###########

# pull official base image
FROM python:3.9.6-slim as builder

# set work directory
WORKDIR /usr/src/

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apt-get update \
&& apt-get -y install g++ libpq-dev gcc unixodbc unixodbc-dev && apt-get install -y apt-utils


RUN pip install --upgrade pip


COPY . .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/wheels -r requirements.txt

RUN apt-get update && apt install -y nmap

#########
# FINAL #
#########

# pull official base image
FROM python:3.9.6-slim

# create directory for the app user
RUN mkdir -p /home/pwitter
RUN apt-get update && apt-get install -y netcat

# create the app user
RUN adduser --system --group pwitter

# create the appropriate directories
ENV HOME=/home/pwitter
ENV APP_HOME=/home/pwitter/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/uploads
WORKDIR $APP_HOME

# install dependencies

COPY --from=builder /usr/src/wheels /wheels
COPY --from=builder /usr/src/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R pwitter:pwitter $APP_HOME



# change to the app user
USER pwitter

# run entrypoint.prod.sh
ENTRYPOINT ["/home/pwitter/web/entrypoint.prod.sh"]